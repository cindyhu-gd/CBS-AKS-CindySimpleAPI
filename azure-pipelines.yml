# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

resources:
  repositories:
    - repository: templates
      type: github
      endpoint: Green-Dot-Corporation
      name: Green-Dot-Corporation/re-ado-pipelines
      ref: cindy/RE-42897
trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:

- task: UseDotNet@2
  displayName: 'Install .NET Core SDK 7.x'
  inputs:
    version: 7.x
    performMultiLevelLookup: true
    includePreviewVersions: true # Required for preview versions

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'dotnet --version'
- task: DotNetCoreCLI@2
  displayName: dotnet restore
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: 'select'



#- task: DotNetCoreCLI@2
#  displayName: dotnet test
#  inputs:
#    command: 'test'
#    projects: '**/*Tests/*.csproj'
#    arguments: '--configuration $(buildConfiguration)'

- script: dotnet build --configuration $(buildConfiguration) 
  displayName: dotnet build

- task: DotNetCoreCLI@2
  displayName: dotnet publish
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'src/SimpleAPI/SimpleAPI.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory) /p:PackageId=SimpleAPI /p:PackageVersion=1.0.0'
    zipAfterPublish: true

#- task: DotNetCoreCLI@2
#  displayName: dotnet pack
#  inputs:
#    command: 'pack'
#    packagesToPack: 'src/SimpleAPI/SimpleAPI.csproj'
#    nobuild: true
#    arguments: '/p:PackageId=SimpleAPI /p:PackageVersion=1.0.0 --outupt $(Build.ArtifactStagingDirectory)'

- task: Bash@3
  displayName: check files under $(Build.ArtifactStagingDirectory)
  inputs:
    targetType: 'inline'
    script: |
      dir '$(Build.ArtifactStagingDirectory)'

- task: Bash@3
  displayName: Create build_info.
  inputs:
    targetType: 'inline'
    script: |
      cd '$(Build.ArtifactStagingDirectory)'
      echo | tee ./build_info.json <<EOF
      {
         "JiraIssueKey": "RE-42897",
          "RepoName": "CindySampleAPI",
          "CommitHash": "$(Build.SourceVersion)"
      }
      EOF
      ls -l .
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      # Write your commands here
      
      echo 'Hello world'
- task: PublishBuildArtifacts@1
  displayName: 'publish artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
    MaxArtifactSize: 0
