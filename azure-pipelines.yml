# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

resources:
  repositories:
    - repository: templates
      type: github
      endpoint: Green-Dot-Corporation
      name: Green-Dot-Corporation/re-ado-pipelines
      ref: RE-42897
trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: BuildAndPublish
  jobs:
    - job: Build
      displayName: Build Source Code
      steps:
        - checkout: self
        - task: Bash@3
          displayName: check repo structure
          inputs:
            targetType: 'inline'
            script: |
              pwd
              ls -la
        - task: UseDotNet@2
          displayName: 'Install .NET Core SDK 7.x'
          inputs:
            version: 7.x
            performMultiLevelLookup: true
            includePreviewVersions: true # Required for preview versions
        - task: UseDotNet@2
          displayName: 'Install .NET Core SDK 7.x'
          inputs:
            version: 7.x
            performMultiLevelLookup: true
            includePreviewVersions: true # Required for preview versions

        - script: dotnet build --configuration $(buildConfiguration) 
          displayName: dotnet build

        - task: DotNetCoreCLI@2
          displayName: dotnet publish
          inputs:
            command: 'publish'
            publishWebProjects: false
            projects: 'src/SimpleAPI/SimpleAPI.csproj'
            arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory) /p:PackageId=SimpleAPI /p:PackageVersion=1.0.0'
            zipAfterPublish: true

        - task: Bash@3
          displayName: check files under $(Build.ArtifactStagingDirectory)
          inputs:
            targetType: 'inline'
            script: |
              dir '$(Build.ArtifactStagingDirectory)'
    - job: CreateReleaseNotes
      steps:
        - checkout: templates
        - task: Bash@3
          displayName: check repo structure
          inputs:
            targetType: 'inline'
            script: |
              pwd
              ls -la
        - task: Bash@3
          displayName: Create build_info.json
          inputs:
            targetType: 'inline'
            script: |
              cd '$(Build.ArtifactStagingDirectory)'
              echo | tee ./build_info.json <<EOF
              {
                "JiraIssueKey": "RE-42897",
                "RepoName": "CindySampleAPI",
                "CommitHash": "$(Build.SourceVersion)"
              }
              EOF
              ls -l .
        - task: Bash@3
          displayName: Copy RE scripts
          inputs:
            targetType: 'inline'
            script: |
              cd '$(Build.ArtifactStagingDirectory)'
              mkdir -p utilities
              cp -f scripts/AddDeployCommentOnJiraIssue.sh utilities/
              ls -l .
    - job: PublishArtifact
      steps:
      - task: PublishPipelineArtifact@1
        inputs:
          artifactName: 'chart'
          path: $(Build.ArtifactStagingDirectory)